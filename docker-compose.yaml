version: "3.8"

services:
  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - "8071:8071"
    networks:
      backend:
        aliases:
          - "configserver"

  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    depends_on:
      config-server:
        condition: service_started
    networks:
      backend:
        aliases:
          - "eurekaserver"

  gateway-server:
    build:
      context: ./gateway-server
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started
    networks:
      backend:
        aliases:
          - "gatewayserver"

  licensing-service:
    build:
      context: ./licensing-service
      dockerfile: Dockerfile
    ports:
       - "8082:8082"
    depends_on:
      license-db:
        condition: service_healthy
      config-server:
        condition: service_started
    restart: unless-stopped
    networks:
      backend:
        aliases:
          - "licenseservice"

  organization-service:
    build:
      context: ./organization-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      license-db:
        condition: service_healthy
      config-server:
        condition: service_started
    restart: unless-stopped
    networks:
      backend:
        aliases:
          - "organizationservice"

  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak_db
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
    ports:
      - "8080:8080"
    depends_on:
      - keycloak-db
    command: [ "start-dev" ]
    networks:
      backend:

  keycloak-db:
    image: postgres:17.5
    ports:
      - "5435:5432"
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - keycloak-db:/var/lib/postgresql/data
    networks:
      backend:

  license-db:
    image: postgres:17.5
    restart: unless-stopped  # Автоматический перезапуск при падении
    ports:
      - "5432:5432"
    volumes:
      - license-db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ostock_dev
      PGDATA: /var/lib/postgresql/data/pgdata  # Явное указание пути к данным
    healthcheck: # Проверка готовности БД
      test: [ "CMD-SHELL", "pg_isready -U postgres -d ostock_dev" ]
      interval: 5s
      timeout: 5s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    networks:
      backend:

volumes:
  license-db:
  keycloak-db:

networks:
  backend:
    driver: bridge